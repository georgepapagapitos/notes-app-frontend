{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","handleDelete","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","notesToShow","filter","map","catch","find","n","changedNote","returnedNote","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"kLAeeA,EAbF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,aAEhCC,EAAQH,EAAKI,UAAY,qBAAuB,iBAEtD,OACE,qBAAIC,UAAU,OAAd,UACGL,EAAKM,QACN,wBAAQC,QAASN,EAAjB,SAAoCE,IACpC,wBAAQI,QAASL,EAAjB,wBCESM,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKJ,UAAU,QAAf,SACGI,KCOQC,EAdA,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,oE,gBCRAC,EAAU,aAsBD,EApBK,WAElB,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfI,SAAAC,GAEjB,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVI,SAACG,EAAIF,GAEtB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALI,SAACG,GAElB,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC4E5BM,EA1FH,SAACC,GACX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,iBAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,IAEGpB,MAAK,SAAAC,GACJW,EAASX,QAEZ,IAGH,IAkDMoB,EAAcN,EAAUJ,EAAQA,EAAMW,QAAO,SAAAxC,GAAI,OAAIA,EAAKI,aAEhE,OACE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAAS0B,IACvB,8BACE,yBAAQ5B,QAAS,kBAAM2B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGM,EAAYE,KAAI,SAAAzC,GAAI,OACnB,cAAC,EAAD,CAAoBA,KAAMA,EAAME,aAAc,kBAxBhCqB,EAwBmDvB,EAAKuB,QAvB5Ee,EACcf,GACXL,MAAK,SAAAC,GACJW,EAASD,EAAMW,QAAO,SAAAxC,GAAI,OAAIA,EAAKuB,KAAOA,SAE3CmB,OAAM,WACLN,EAAgB,0BAPD,IAACb,GAwB6DtB,iBAAkB,kBA/C1E,SAAAsB,GACzB,IAAMvB,EAAO6B,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAErB,KAAOA,KAChCsB,EAAW,2BAAQ7C,GAAR,IAAcI,WAAYJ,EAAKI,YAEhDkC,EACcf,EAAIsB,GAAa3B,MAAK,SAAA4B,GAChChB,EAASD,EAAMY,KAAI,SAAAzC,GAAI,OAAIA,EAAKuB,KAAOA,EAAKvB,EAAO8C,SAEpDJ,OAAM,WACLN,EAAgB,SAAD,OACJpC,EAAKM,QADD,sCAGfyC,YAAW,WACTX,EAAgB,QACf,KACHN,EAASD,EAAMW,QAAO,SAAAI,GAAC,OAAIA,EAAErB,KAAOA,SAgCiEyB,CAAmBhD,EAAKuB,MAAhHvB,EAAKuB,SAGpB,uBAAM0B,SAlEM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB9C,QAASyB,EACTsB,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,IAG7BnB,EACcc,GACXlC,MAAK,SAAAC,GACJW,EAASD,EAAM6B,OAAOvC,IACtBa,EAAW,QAsDb,UACE,uBAAO2B,MAAO5B,EAAS6B,SAhCJ,SAACV,GACxBlB,EAAWkB,EAAMW,OAAOF,UAgCpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MCtFNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a35f1f5c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance, handleDelete }) => {\r\n\r\n  const label = note.important ? 'make not important' : 'make important';\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n      <button onClick={handleDelete}>delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note;","const Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification;","const Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, A Human Company 2021</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAllNotes = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst createNote = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst updateNote = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst deleteNote = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nexport default { getAllNotes, createNote, updateNote, deleteNote };","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport noteService from './services/notes';\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService\n      .getAllNotes()\n      .then(response => {\n        setNotes(response);\n      })\n  }, [])\n\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .createNote(noteObject)\n      .then(response => {\n        setNotes(notes.concat(response))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .updateNote(id, changedNote).then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(() => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const handleDelete = (id) => {\n    noteService\n      .deleteNote(id)\n      .then(response => {\n        setNotes(notes.filter(note => note.id !== id));\n      })\n      .catch(() => {\n        setErrorMessage('error deleting note');\n      });\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note key={note.id} note={note} handleDelete={() => handleDelete(note.id)} toggleImportance={() => toggleImportanceOf(note.id)} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}